server.port=8891
spring.application.name=payment-service

# EUREKA
eureka.client.service-url.defaultZone={cipher}be510b5659a73c1a53eae203673455cd0b33a86a71d50bfaa0e5a1b2602b7a3d356a0553223eee64b01f965cb3810578

# Sleuth
spring.sleuth.sampler.probability=1.0
spring.sleuth.sampler.enabled=true

#zipkin
spring.zipkin.enabled=true
spring.zipkin.base-url={cipher}a0a169efc2cea35e3233a1563c8ce762622744627906b03c946256cacbfd919dbd6786451665ae1a0b4a04a0ed61c2f2

# Actuator
management.endpoints.web.base-path=/system
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include= health, info, refresh

# KAFKA CONSUMER
spring.kafka.bootstrap-servers={cipher}fbc65df5c308d37b9924668179fd725ba0cf57633687acec0b718ccfc72631378432fe45aaeabff19c76054aa4348d1951c3ace210430d920853ddc6a8f72bdb42b8cdd186fb150f9b1427e576f1712ef5e0b8819fcaee7ec93e7020b13c4c86
spring.kafka.consumer.group-id=payment-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic=ended-product

mock.url={cipher}e1f2e389b7aacdf95cd1b1f61c5290c1862f1b456763e2f1fff8eb5a4733dd18e4527f075f524f7e45ac4dd485632fdd